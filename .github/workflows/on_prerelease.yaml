name: Prerelease pipeline
on:
  release:
    types:
      - prereleased
    tags:
      - 'v*'

jobs:
  consumer-producer-image:
    env:
      ORIGINAL_REPO_NAME: ${{ github.event.repository.full_name }}
      CONSUMER_PRODUCER_DOCKER_IMAGE_NAME: ghcr.io/newrelic/kafka-consumer-producer
    name: Build and push consumer-producer image to use in our canaries
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          path: src/github.com/${{ env.ORIGINAL_REPO_NAME }}
      - uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

  # This is currently not covered by reusable workflow due to the retry mechanism
  test-integration-nix:
    name: Run integration tests on *Nix
    runs-on: ubuntu-22.04
    env:
      ORIGINAL_REPO_NAME: ${{ github.event.repository.full_name }}
      NRJMX_VERSION: '2.3.2' ## this is needed in the makefile
    defaults:
      run:
        working-directory: src/github.com/${{env.ORIGINAL_REPO_NAME}}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: src/github.com/${{env.ORIGINAL_REPO_NAME}}
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'src/github.com/${{env.ORIGINAL_REPO_NAME}}/go.mod'
      - name: Integration test
        # One of the integration consumer tests is not working as expected to the environment bootstrap, to keep it
        run: for i in 1 2 3; do make integration-test && break; done

  pre-release:
    needs: [test-integration-nix]
    uses: newrelic/coreint-automation/.github/workflows/reusable_pre_release.yaml@fix_skippedJob
    with:
      tag: ${{ github.event.release.tag_name }}
      integration: kafka
      publish_schema: "ohi-jmx"
      run_integration_nix: false
      test_package: false
      run_build-win-packages: false
    secrets:
      OHAI_AWS_ROLE_ARN_STAGING: ""
      OHAI_AWS_ROLE_SESSION_NAME_STAGING: ""
      OHAI_AWS_ACCESS_KEY_ID_STAGING: ""
      OHAI_AWS_SECRET_ACCESS_KEY_STAGING: ""
      OHAI_GPG_PASSPHRASE: ""
      OHAI_GPG_PRIVATE_KEY_BASE64: ""
      OHAI_PFX_CERTIFICATE_BASE64: ""
      OHAI_PFX_PASSPHRASE: ""
      COREINT_SLACK_TOKEN: ""
      COREINT_SLACK_CHANNEL: ""



